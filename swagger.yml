swagger: '2.0'
info:
  title: Sample API
  description: API description in Markdown.
  version: "1.0.0"
servers:
  - url: http://localhost:5000/api/v1
paths:
  /api/workout/{workout_id}:
    get:
      tags:
        - Workout
      summary: Get a single workout by ID
      parameters:
        - in: path
          name: workout_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the workout
      responses:
        200:
          description: A workout object
          schema:
            $ref: '#/definitions/Workout'
          examples:
            application/json:
              "@namespaces":
                custWorkoutPlaylistGen:
                  name: "/workout_link_relation"
              "@controls":
                collection:
                  method: GET
                  title: List All Workouts
                  href: /api/workout
                up:
                  method: GET
                  title: Get workout plans for the workout
                  href: /api/workoutItem/38
                item:
                  method: GET
                  title: Get Workout by workout_id
                  href: /api/workout/38
                edit:
                  method: PUT
                  title: Edit This Workout
                  encoding: json
                  schema:
                    type: object
                    required:
                      - workout_name
                      - duration
                      - workout_intensity
                      - equipment
                      - workout_type
                    properties:
                      workout_name:
                        description: Name of the workout
                        type: string
                      duration:
                        description: Duration of the workout
                        type: number
                      workout_intensity:
                        description: Intensity of the workout
                        type: string
                      equipment:
                        description: Equipment needed for the workout
                        type: string
                      workout_type:
                        description: Type of the workout
                        type: string
                  href: /api/workout/38
                delete:
                  method: DELETE
                  title: Delete This Workout
                  href: /api/workout/38
                profile:
                  href: /profile
              workout_id: 38
              workout_name: dancing
              duration: 3.0
              workout_intensity: mild
              equipment: threadmill
              workout_type: Cardio
        404:
          description: Workout not found
      security:
        - BearerAuth: []
        - X-API-Key: []
    put:
      tags:
        - Workout
      summary: Update a workout
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: workout_id
          required: true
          type: integer
          description: Unique identifier of the workout to be updated
        - in: body
          name: workout
          description: Workout data to be updated
          required: true
          schema:
            $ref: '#/definitions/Workout'
      responses:
        204:
          description: Workout updated successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/workout_plan_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Workout updated successfully"
        400:
          description: No input data provided or invalid input data
        403:
          description: Unauthorized access
        415:
          description: Unsupported Media Type, This service accept JSON input.
        404:
          description: Workout not found
      security:
        - BearerAuth: []
        - X-API-Key: []
    delete:
      tags:
        - Workout
      summary: Delete a workout
      parameters:
        - in: path
          name: workout_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the workout to be deleted
      responses:
        204:
          description: Workout deleted successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/workout_plan_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Workout deleted successfully"
        403:
          description: This workout belongs to a workout plan or Unauthorized access
        404:
          description: Workout not found
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/workout:
    get:
      tags:
        - Workouts Collection
      summary: Get all workouts
      responses:
        200:
          description: An array of workout objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Workout'
          examples:
            application/json:
              "@namespaces":
                custWorkoutPlaylistGen:
                  name: "/workout_link_relation"
              "@controls":
                item:
                  method: GET
                  title: Get Workout by workout_id
                  href: "/api/workout/43"
                profile:
                  href: "/profile"
                self:
                  title: Self
                  href: "/api/workout/"
              workout_list:
                - workout_id: 1
                  workout_name: Cardio Blast
                  duration: 5.0
                  workout_intensity: slow
                  equipment: treadmill
                  workout_type: Cardio
                - workout_id: 5
                  workout_name: running
                  duration: 6.0
                  workout_intensity: mild
                  equipment: text
                  workout_type: text
                - workout_id: 35
                  workout_name: walking
                  duration: 1.5
                  workout_intensity: mild
                  equipment: text
                  workout_type: text
                - workout_id: 36
                  workout_name: walking
                  duration: 1.5
                  workout_intensity: mild
                  equipment: text
                  workout_type: text
                - workout_id: 37
                  workout_name: walking
                  duration: 1.5
                  workout_intensity: mild
                  equipment: text
                  workout_type: text
                - workout_id: 38
                  workout_name: dancing
                  duration: 3.0
                  workout_intensity: mild
                  equipment: threadmill
                  workout_type: Cardio
                - workout_id: 39
                  workout_name: walking
                  duration: 1.5
                  workout_intensity: mild
                  equipment: text
                  workout_type: text
                - workout_id: 41
                  workout_name: Roll Ball v2
                  duration: 6.0
                  workout_intensity: fast
                  equipment: Yoga Mat
                  workout_type: Flexibility
                - workout_id: 42
                  workout_name: Roll Ball
                  duration: 6.0
                  workout_intensity: fast
                  equipment: Yoga Mat
                  workout_type: Flexibility
                - workout_id: 43
                  workout_name: Roll Ball
                  duration: 6.0
                  workout_intensity: fast
                  equipment: Yoga Mat
                  workout_type: Flexibility
        500:
          description: Internal Server Error
      security:
        - BearerAuth: []
        - X-API-Key: []
    post:
      tags:
        - Workouts Collection
      summary: Add a new workout
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: workout
          description: Workout object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Workout'
      responses:
        201:
          description: Workout added successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/workout_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Workout created successfully"
        400:
          description: Invalid input data
        403:
          description: Unauthorized access
        415:
          description: Unsupported Media Type, This service accept JSON input.
        500:
          description: Internal Server Error.
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/workoutPlan:
    post:
      tags:
        - Create Workout Plan
      summary: Add a new workout plan
      description: Creates a new workout plan with a specified name and list of workout IDs.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: workoutPlan
          description: Workout plan data that needs to be added
          required: true
          schema:
            type: object
            required:
              - workout_ids
              - plan_name
            properties:
              workout_ids:
                type: array
                description: List of IDs of workouts included in the plan.
                example: [5,6]
              plan_name:
                type: string
                description: Name of the workout plan.
                example: "Summer Night Plan"
      responses:
        201:
          description: Workout plan created successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/workout_plan_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Workout plan created successfully"
        400:
          description: Invalid input data
        403:
          description: Unauthorized access
        415:
          description: Unsupported Media Type, This service accept JSON input.
        500:
          description: Internal Server Error
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/workoutPlan/{workout_plan_id}:
    get:
      tags:
        - Workout Plan
      summary: Get a workout plan by ID
      description: Retrieves details of a specific workout plan.
      operationId: getWorkoutPlanById
      parameters:
        - name: workout_plan_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the workout plan
      responses:
        200:
          description: A workout plan object
          schema:
            $ref: '#/definitions/WorkoutPlan'
        404:
          description: Workout plan not found
      security:
        - BearerAuth: []
        - X-API-Key: []
    put:
      tags:
        - Workout Plan
      summary: Update a workout plan
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: workout_plan_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the workout plan to be updated
        - in: body
          name: workoutPlan
          description: Workout plan data to be updated
          required: true
          schema:
            type: object
            properties:
              plan_name:
                type: string
                description: Name of the workout plan.
                example: "Morning Routine"
              duration:
                type: integer
                description: Total duration of the workout plan.
                example: 12
              user_id:
                type: integer
                description: ID of the user.
                example: 26
              playlist_id:
                type: integer
                description: ID of the playlist.
                example: 4
      responses:
        204:
          description: Workout plan updated successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/workout_plan_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Workout plan updated successfully"
        400:
          description: No input data provided or invalid input data
        403:
          description: Unauthorized access
        404:
          description: Workout plan not found
        415:
          description: Unsupported Media Type, This service accept JSON input.
      security:
        - BearerAuth: []
        - X-API-Key: []
    delete:
      tags:
        - Workout Plan
      summary: Delete a workout plan
      description: Deletes an existing workout plan.
      operationId: deleteWorkoutPlan
      parameters:
        - name: workout_plan_id
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier of the workout plan to be deleted
      responses:
        204:
          description: Workout plan deleted successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/workout_plan_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Workout plan deleted successfully"
        404:
          description: Workout plan not found
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/{user_id}/workoutPlan:
    get:
      tags:
        - Workout Plan By User
      summary: Get workout plan by user ID
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the user
      responses:
        200:
          description: List of workout plans for the user
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkoutPlan'
          examples: 
            application/json:
              "@namespaces": 
                custWorkoutPlaylistGen:
                  name: "/workout_plan_link_relation"
              "@controls": 
                item:
                  method: "GET"
                  title: "Get all Workouts"
                  href: "/api/workout"
              workout_plans_list:
                - "@controls":
                    item:
                      method: "GET"
                      title: "Get Workout plan by workout_plan_id"
                      href: "/api/workoutPlan/12"
                    delete:
                      method: "DELETE"
                      title: "Delete This Workout Plan"
                      href: "/api/workoutPlan/12"
                  workout_plan_id: 12
                  plan_name: "Morning Routine"
                  user_id: 48
                  playlist_id: 4
                  duration: 15.0
                  workouts_list:
                    - workout_id: 44
                      workout_name: "w1"
                      duration: 6.33
                      workout_intensity: "slow"
                      equipment: "treadmill"
                      workout_type: "test"
                    - "@controls":
                        item:
                          method: "GET"
                          title: "Get Workout plan by workout_plan_id"
                          href: "/api/workoutPlan/32"
                        delete:
                          method: "DELETE"
                          title: "Delete This Workout Plan"
                          href: "/api/workoutPlan/32"
                      workout_plan_id: 32
                      plan_name: "new plan"
                      user_id: 48
                      playlist_id: 53
                      duration: 7.83
                      workouts_list:
                        - workout_id: 47
                          workout_name: "w1"
                          duration: 6.33
                          workout_intensity: "fast"
                          equipment: "treadmill"
                          workout_type: "test"
                        - workout_id: 48
                          workout_name: "jogging"
                          duration: 1.5
                          workout_intensity: "mild"
                          equipment: "no"
                          workout_type: "Cardio"
        404:
          description: Workout Plan for the user is not found
        400:
          description: Invalid input data
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/song/{song_id}:
    get:
      tags:
        - Song
      summary: Get a single song by ID
      parameters:
        - in: path
          name: song_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the song
      responses:
        200:
          description: A song object
          schema:
            $ref: '#/definitions/Song'
          examples:
            application/json:
              "@namespaces":
                custWorkoutPlaylistGen:
                  name: "/song_link_relation"
              "@controls":
                collection:
                  method: GET
                  title: List All Songs
                  href: /api/song
                edit:
                  method: PUT
                  title: Edit This Song
                  encoding: json
                  schema:
                    type: object
                    required:
                      - song_name
                      - song_artist
                      - song_genre
                      - song_duration
                    properties:
                      song_name:
                        description: Name of the song
                        type: string
                      song_artist:
                        description: Artist of the song
                        type: string
                      song_genre:
                        description: Genre of the song
                        type: string
                      song_duration:
                        description: Duration of the song
                        type: number
                  href: /api/song/4
                delete:
                  method: DELETE
                  title: Delete This Song
                  href: /api/song/4
                profile:
                  href: /profile
              song_id: 4
              song_name: Pop5
              song_artist: lilMozart
              song_genre: Pop
              song_duration: 4.52
        404:
          description: Song not found
      security:
        - BearerAuth: []
        - X-API-Key: []
    put:
      tags:
        - Song
      summary: Update a song
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: song_id
          required: true
          type: integer
          description: Unique identifier of the song to be updated
        - in: body
          name: song
          description: Song data to be updated
          required: true
          schema:
            $ref: '#/definitions/Song'
      responses:
        204:
          description: Song updated successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/song_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Song updated successfully"
        400:
          description: No input data provided or invalid input data
        403:
          description: Unauthorized access
        404:
          description: Song not found
        415:
          description: Unsupported Media Type, This service accept JSON input.
      security:
        - BearerAuth: []
        - X-API-Key: []
    delete:
      tags:
        - Song
      summary: Delete a song
      parameters:
        - in: path
          name: song_id
          required: true
          schema:
            type: integer
          description: Unique identifier of the song to be deleted
      responses:
        204:
          description: Song deleted successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/song_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Song deleted successfully"
        403:
          description: Unauthorized access
        404:
          description: Song not found
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/song:
    get:
      tags:
        - Songs Collection
      summary: Get all songs
      responses:
        200:
          description: An array of song objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Song'
          examples: 
            application/json:
              "@namespaces":
                custWorkoutPlaylistGen:
                  name: "/song_link_relation"
              "@controls":
                item:
                  method: GET
                  title: Get Song by song_id
                  href: "/api/song/17"
                profile:
                  href: "/profile"
                self:
                  title: Self
                  href: "/api/song/"
              song_list:
                - song_id: 1
                  song_name: Classic35
                  song_artist: lilMozart
                  song_genre: Classical
                  song_duration: 3.52
                - song_id: 2
                  song_name: Pop1
                  song_artist: lilMozart
                  song_genre: Pop
                  song_duration: 3.52
                - song_id: 3
                  song_name: Pop2
                  song_artist: lilMozart
                  song_genre: Pop
                  song_duration: 2.52
                - song_id: 4
                  song_name: Pop5
                  song_artist: lilMozart
                  song_genre: Pop
                  song_duration: 4.52
                - song_id: 5
                  song_name: Indie3000
                  song_artist: lilMozart
                  song_genre: Indie
                  song_duration: 2.52
                - song_id: 6
                  song_name: Indie2
                  song_artist: lilMozart
                  song_genre: Indie
                  song_duration: 3.52
                - song_id: 7
                  song_name: Classic4
                  song_artist: lilMozart
                  song_genre: Classical
                  song_duration: 3.52
                - song_id: 8
                  song_name: Indie45
                  song_artist: lilMozart
                  song_genre: Indie
                  song_duration: 2.52
                - song_id: 9
                  song_name: Classic5
                  song_artist: lilMozart
                  song_genre: Classical
                  song_duration: 3.52
                - song_id: 10
                  song_name: Classic7
                  song_artist: lilMozart
                  song_genre: Classical
                  song_duration: 3.52
                - song_id: 12
                  song_name: kan kaan
                  song_artist: abcdefsdad
                  song_genre: pop
                  song_duration: 5.32
                - song_id: 13
                  song_name: Classic9
                  song_artist: lilMozart
                  song_genre: R&B
                  song_duration: 3.52
                - song_id: 16
                  song_name: Indie3
                  song_artist: lilMozart
                  song_genre: Indie
                  song_duration: 4.52
                - song_id: 17
                  song_name: Indie31
                  song_artist: lilMozart
                  song_genre: Indie
                  song_duration: 4.52
        500:
          description: Internal Server Error
      security:
        - BearerAuth: []
        - X-API-Key: []
    post:
      tags:
        - Songs Collection
      summary: Add a new song
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: song
          description: Song object that needs to be added to the store
          required: true
          schema:
            $ref: '#/definitions/Song'
      responses:
        201:
          description: Song added successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/song_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Song added successfully"
        400:
          description: Invalid input data
        403:
          description: Unauthorized access
        409:
          description: Song already exists
        415:
          description: Unsupported Media Type, This service accept JSON input.
        500:
          description: Internal Server Error
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/playlist/{playlist_id}:
    get:
      tags:
        - Playlist
      summary: Get a playlist by ID
      description: Retrieves details of a specific playlist including its songs.
      parameters:
        - name: playlist_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the playlist
      responses:
        200:
          description: A playlist object with songs
          schema:
            $ref: '#/definitions/Playlist'
          examples: 
            application/json:
              "@namespaces":
                  custWorkoutPlaylistGen:
                      name: "/playlist_link_relation"
              "@controls":
                  item:
                      method: GET
                      title: Get songs for the playlist
                      href: "/api/playlistItem/1"
                  edit:
                      method: PUT
                      title: Edit This Playlist
                      encoding: json
                      schema:
                          type: object
                          required:
                              - playlist_name
                              - playlist_duration
                          properties:
                              playlist_name:
                                  description: Name of the playlist
                                  type: string
                              playlist_duration:
                                  description: Duration of the playlist
                                  type: number
                      href: "/api/playlist/1"
                  delete:
                      method: DELETE
                      title: Delete This Playlist
                      href: "/api/playlist/1"
                  profile:
                      href: "/profile"
              playlist_name: alex2
              playlist_id: 1
              playlist_duration: 12.08
              songs_list:
                  - song_id: 3
                    song_name: Pop2
                    artist: lilMozart
                    genre: Pop
                    duration: 2.52
                  - song_id: 4
                    song_name: Pop5
                    artist: lilMozart
                    genre: Pop
                    duration: 4.52
                  - song_id: 5
                    song_name: Indie3000
                    artist: lilMozart
                    genre: Indie
                    duration: 2.52
        404:
          description: Playlist not found
      security:
        - BearerAuth: []
        - X-API-Key: []
    put:
      tags:
        - Playlist
      summary: Update a playlist
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: playlistUpdate
          description: Playlist data to be updated
          required: true
          schema:
            properties:
              playlist_name:
                type: string
                description: Name of the playlist.
                example: "Summer night plan Playlist"
      responses:
        204:
          description: Playlist updated successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/playlist_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Playlist updated successfully"
        400:
          description: No input data provided or invalid input data
        403:
          description: Unauthorized access
        404:
          description: Playlist not found
        415:
          description: Unsupported Media Type, This service accept JSON input.
      security:
        - BearerAuth: []
        - X-API-Key: []
    delete:
      tags:
        - Playlist
      summary: Delete a playlist
      description: Deletes an existing playlist and its associated items.
      parameters:
        - name: playlist_id
          in: path
          required: true
          schema:
            type: integer
          description: Unique identifier of the playlist to be deleted
      responses:
        204:
          description: Playlist deleted successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/playlist_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Playlist deleted successfully"
        404:
          description: Playlist not found
        403:
          description: This playlist belongs to a workout plan
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/playlist:
    post:
      tags:
        - Create Playlist
      summary: Create a new playlist
      description: Creates a new playlist based on provided workout IDs, with a specific duration and name. 
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: Playlist creation data
          required: true
          schema:
            $ref: '#/definitions/Playlist'
      responses:
        201:
          description: Playlist created successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/playlist_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Playlist created successfully"
        400:
          description: Invalid input data
        403:
          description: Unauthorized access
        415:
          description: Unsupported Media Type, This service accept JSON input.
        500:
          description: Internal Server Error
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/user:
    post:
      tags:
        - User Registration
      summary: Register a new user
      description: Creates a new user account with the provided details.
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          description: User registration data
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: User registered successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/user_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "User registered successfully"
        400:
          description: Invalid input data for user registration or email already exists
        415:
          description: Unsupported Media Type, This service accept JSON input.
        500:
          description: Failed to register user or generate API key
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/user/{email}:
    post:
      tags:
        - User Login
      summary: User login
      description: Authenticates a user and provides an access token upon successful authentication.
      consumes:
        - application/json
      parameters:
        - in: body
          name: UserLogin
          description: User login credentials
          required: true
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                description: The user's email address.
                example: "abc@example.com"
              password:
                type: string
                format: password
                description: The user's password.
                example: "Welcome@123"
      responses:
        201:
          description: Login successful
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/user_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "Login successful"
              access_token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmcmVzaCI6ZmFsc2UsImlhdCI6MTcxMzc4MDc3MSwianRpIjoiM2NlMDI2MWItNTRlNi00YTliLWE3ODgtNDg3MTQyMDczNzljIiwidHlwZSI6ImFjY2VzcyIsInN1YiI6NDIsIm5iZiI6MTcxMzc4MDc3MSwiY3NyZiI6IjNlNTkzOTA3LTI4ZmUtNDViOC05ZDE2LTQ5ZTAxOThkZDBiYiIsImV4cCI6jTcxMzg2NzE3MX0.OBxYvq1CGRI1tyGUF7IEnuQ9fAgUh6MRGM6eNNr77RE"
        400:
          description: Invalid input data for user login
        401:
          description: Invalid password
        404:
          description: No such user in the system
        415:
          description: Unsupported Media Type, This service accept JSON input.
        500:
          description: Internal Server Error
      security:
        - BearerAuth: []
        - X-API-Key: []

  /api/user/{user_id}:
    get:
      tags:
        - User
      summary: Get user details
      description: Retrieves details of a specific user by user ID.
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the user
      responses:
        200:
          description: User details retrieved successfully
          schema:
            $ref: '#/definitions/User'
          examples: 
            application/json:
              "@namespaces":
                  custWorkoutPlaylistGen:
                      name: "/user_link_relation"
              "@controls":
                  custWorkoutPlaylistGen:edit:
                      method: PUT
                      title: Edit This User
                      encoding: json
                      schema:
                          type: object
                          required:
                              - email
                              - password
                              - height
                              - weight
                              - user_type
                          properties:
                              email:
                                  description: Users email
                                  type: string
                              password:
                                  description: Users password
                                  type: string
                              height:
                                  description: Users height
                                  type: number
                              weight:
                                  description: Users weight
                                  type: number
                              user_type:
                                  description: Users type
                                  type: string
                      href: "/api/users/39"
                  custWorkoutPlaylistGen:delete:
                      method: DELETE
                      title: Delete This User
                      href: "/api/user/39"
                  profile:
                      href: "/profile"
              email: nirashaT@gmail.com
              height: 199.0
              weight: 70.0
              user_type: admin
        400:
          description: Invalid input data
      security:
        - BearerAuth: []
        - X-API-Key: []
    delete:
      tags:
        - User
      summary: Delete a user
      description: Deletes a specific user by user ID. Requires admin privileges.
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the user to be deleted
      responses:
        204:
          description: User deleted successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/user_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "User deleted successfully"
        403:
          description: Unauthorized access
        404:
          description: User not found
      security:
        - BearerAuth: []
        - X-API-Key: []
    put:
      tags:
        - User
      summary: Update a user
      description: Updates details of a specific user by user ID. Requires admin privileges.
      consumes:
        - application/json
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the user to be updated
        - in: body
          name: user
          description: User data to be updated
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        204:
          description: User updated successfully
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/user_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "User updated successfully"
        400:
          description: No input data provided or invalid input data
        403:
          description: Unauthorized access
        404:
          description: User not found
        415:
          description: Unsupported Media Type, This service accept JSON input.
      security:
        - BearerAuth: []
        - X-API-Key: []
  /api/user/update_api_key/{user_id}:
    put:
      tags:
        - Generate API Key
      summary: Update a user's API key
      description: Generates a new API key for the specified user and updates the existing one, using the Mason response format.
      parameters:
        - name: user_id
          in: path
          required: true
          type: integer
          description: Unique identifier of the user whose API key needs to be updated.
      responses:
        200:
          description: API key updated successfully. 
          schema:
            type: object
            properties:
              "@namespaces":
                type: object
                properties:
                  custWorkoutPlaylistGen:
                    type: object
                    properties:
                      name:
                        type: string
                example:
                  custWorkoutPlaylistGen:
                    name: "/user_link_relation"
              "@controls":
                type: object
                properties:
                  profile:
                    type: object
                    properties:
                      href:
                        type: string
                example:
                  profile:
                    href: "/profile"
              message:
                type: string
                example: "API key updated successfully"
              new_api_key:
                type: string
                example: "7c9861d3-2ec2-495a-bd33-7f864104bde4"
        404:
          description: User not found or API key not found for the user.
        500:
          description: Failed to update API key. 
      security:
        - BearerAuth: []
        - X-API-Key: []
securityDefinitions:
  BearerAuth:
    type: apiKey
    in: header
    name: Authorization
    description: Enter your bearer token in the format **Bearer <token>**
  X-API-Key:
    type: apiKey
    in: header
    name: X-API-Key
    description: "Enter your API key in the X-API-Key header"
definitions:
  Workout:
    type: object
    required:
      - workout_name
      - workout_intensity
      - equipment
      - duration
      - workout_type
    properties:
      workout_name:
        type: string
        description: Name of the workout
        example: "dancing"
      duration:
        type: number
        format: float
        description: Duration of the workout in minutes
        example: 3.0
      workout_intensity:
        type: string
        description: Intensity level of the workout (e.g., low, medium, high)
        example: "mild"
      equipment:
        type: string
        description: Equipment required for the workout (e.g., treadmill, none)
        example: "threadmill"
      workout_type:
        type: string
        description: Type of the workout (e.g., Cardio, Strength)
        example: "Cardio"
  WorkoutPlan:
    type: object
    required:
      - workout_plan_id
      - plan_name
      - user_id
      - duration
    properties:
      workout_plan_id:
        type: integer
        description: Unique identifier for the workout plan
        example: 11
      plan_name:
        type: string
        description: Name of the workout plan
        example: "Sunday plan"
      user_id:
        type: integer
        description: ID of the user
        example: 26
      duration:
        type: float
        description: Total duration of the workout plan
        example: 10.0
      playlist_id:
        description: ID of the playlist
        type: integer
        example: 4
    example: |
      {
        "@namespaces": {
          "custWorkoutPlaylistGen": {
            "name": "/workout_plan_link_relation"
          }
        },
        "@controls": {
          "edit": {
            "method": "PUT",
            "title": "Edit This Workout Plan",
            "encoding": "json",
            "schema": {
              "type": "object",
              "required": ["plan_name"],
              "properties": {
                "plan_name": {
                  "description": "Name of the workout plan",
                  "type": "string"
                }
              }
            },
            "href": "/api/workoutPlan/11"
          },
          "delete": {
            "method": "DELETE",
            "title": "Delete This Workout Plan",
            "href": "/api/workoutPlan/11"
          },
          "custWorkoutPlaylistGen:playlist": {
            "method": "GET",
            "title": "Get Playlist by ID",
            "href": "/api/playlist/3"
          },
          "author": {
            "method": "GET",
            "title": "Get User by ID",
            "href": "/api/user/26"
          },
          "item": {
            "method": "GET",
            "title": "Get Workouts for the Plan",
            "href": "/api/workoutPlanItem/11"
          },
          "profile": {
            "href": "/profile"
          }
        },
        "workout_plan_id": 11,
        "plan_name": "Sunday plan",
        "user_id": 26,
        "duration": 10.0
      }
  Song:
    type: object
    required:
      - song_name
      - song_artist
      - song_genre
      - song_duration
    properties:
      song_name:
        type: string
        description: Name of the song
        example: "Summer Nights"
      song_artist:
        type: string
        description: Artist of the song
        example: "John Doe"
      song_genre:
        type: string
        description: Genre of the song
        example: "Pop"
      song_duration:
        type: float
        description: Duration of the song in minutes
        example: 3.5
  Playlist:
    type: object
    required: 
      - playlist_name
      - workout_ids
    properties:
      workout_ids:
        type: array
        description: Workout IDs of the playlist
        example: [5,6]
      playlist_name:
        type: string
        description: Name of the playlist
        example: "Summer Nights Playlist"
  User:
    type: object
    required: 
      - email
      - password
      - height
      - weight
      - user_type
    properties:
      email:
        type: string
        format: email
        description: The user's email address.
        example: "user@example.com"
      password:
        type: string
        format: password
        description: The user's password.
        example: "Welcome@123"
      height:
        type: float
        description: The user's height in centimeters.
        example: 1.75
      weight:
        type: float
        description: The user's weight in kilograms.
        example: 75.0
      user_type:
        type: string
        enum: [admin, user]
        description: The type of user (admin or regular user).
        example: "admin"